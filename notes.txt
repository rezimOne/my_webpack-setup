1. Struktura
src
>>>>>>> 10111b078a6c4a58c0f54e63d708eb1dccbff88d
  |
  --app.js
  |
  --style.scss

2. Tworzymy pliki
package.json
npm init -y

.babelrc
{
"presets": ["@babel/preset-env"]
}

.gitignore
node_modules/

3. Instalacja:
webpack-cli
>>> npm i -D webpack webpack-cli
webpack-dev-server
>>> npm i -D webpack-dev-server
loadery
>>> npm install sass-loader sass webpack --save-dev
>>> npm install css-loader css webpack --save-dev
>>> npm install style-loader style webpack --save-dev
babel loader dla obsługi starszych przeglądarek
>>> npm i @babel/core @babel/preset-env babel-loader
pluginy
>>> npm install html-webpack-plugin@next --save-dev
>>> npm install clean-webpack-plugin --save-dev

4. Konfiguracja package.json
Dodajemy skrypty: dev dla wersji roboczej, build, który wgeneruje do okrślonego później folderu o nazwie 'deploy' (lub dowolnej) plik main.app-build.js i index.html
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "webpack serve --mode development",
    "build": "webpack --mode production"
    },

5. Tworzymy webpack.config.js
entry - ze wskazaniem na pilik app.js, output - npm run build utworzy folder 'deploy', do którego wygeneruje plik main.app-build.js oraz index.html. Ustawienia serwera, na jakim porcie się uruchomi i co będzie nasłuchiwał. Moduły i pluginy

const HtmlWebpackPlugin = require("html-webpack-plugin");
const path = require('path');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');

module.exports = {
    devtool: "source-map",

    entry: {
        main: path.resolve(__dirname, './src/app.js'),
      },

    output: {
        filename: '[name].app-build.js',
        path: path.resolve(__dirname, 'deploy')
      },

    devServer: {
        port: 4200,
        contentBase: './deploy',
        open: true
      },

    module: {
        rules: [

            {
                test: /\.js$/,
                exclude: /node_modules/,
                use: {
                    loader: 'babel-loader',
                    options: {
                        presets: ['@babel/preset-env']
                    }
                }
            },

            {
                test: /\.s[ac]ss$/i,
                use: [
                    "style-loader",
                    {
                        loader: "css-loader",
                        options: {sourceMap: true}
                    },
                    {
                        loader: "sass-loader",
                        options: {sourceMap: true}
                    },
                ],
            },

            {
                test: /\.(?:ico|gif|png|jpg|jpeg)$/i,
                type: 'asset/resource',
            },

        ]
    },

    plugins: [
        new HtmlWebpackPlugin({
            title: "Webpack Output",
        }),
        new CleanWebpackPlugin()
    ],
};

https://www.sitepoint.com/webpack-beginner-guide/

https://webpack.js.org/loaders/sass-loader/
